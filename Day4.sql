SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID;

SELECT * FROM EMPLOYEES
ORDER BY FIRST_NAME DESC;

-- HOW ABOUT ORDERING  BY COLUMN NUMBER RATHER THAN NAME
-- IN AQL THERE AINT 0 INDEX, INDEX START WITH 1 ALWAYS
SELECT * FROM EMPLOYEES
ORDER BY 2 DESC;

-- GETTING DISTINCT VALUE FROM THE TABLE
-- GET UNIQUE MANAGER_IDs from Employees Table
SELECT DISTINCT MANAGER_ID 
FROM EMPLOYEES;

-- FIND OUT UNIQUE fIRST_NAME IN EMPLOYEE TABLE
SELECT DISTINCT FIRST_NAME
FROM EMPLOYEES;

-- FIND OUT THE COUNT OF UNIQUE FIRST_NAME
SELECT COUNT (DISTINCT FIRST_NAME) AS UNIQUE_NAME_COUNT
FROM EMPLOYEES;

-- USING EMPLOYEES TABLE 
-- FIND OUT HOW MANY EMPLOYEES EACH MANAGER MANAGE (group by manager_id)
-- IF YOU HAVE MORE THAN 1 WORD AND YOU DONT WANT TO USE UNDERSCORE,YOU CAN USE (") TO WRAP UP
SELECT MANAGER_ID, COUNT(*) AS "NUMBER OF EMPLOYEES" 
FROM EMPLOYEES
GROUP BY MANAGER_ID
ORDER BY 1;

-- continue above 
-- find out manager who mange more than 10 employees 
SELECT MANAGER_ID, COUNT(FIRST_NAME) AS "NUMBER OF EMPLOYEES" 
FROM EMPLOYEES
GROUP BY MANAGER_ID
HAVING COUNT(*) > 10;

-- find out manager who manage exactly 6 employees
SELECT MANAGER_ID, COUNT(*) AS "NUMBER OF EMPLOYEES" 
FROM EMPLOYEES
GROUP BY MANAGER_ID
HAVING COUNT(*) = 6;

-- GET THE COUNT OF EMPLOYEE THAT HAVE EXACTLY 5 CHARACTERS IN FIRST NAME (no need for group by)
SELECT COUNT(FIRST_NAME) AS "5 CHARACTER NAME"
FROM EMPLOYEES 
WHERE LENGTH(FIRST_NAME) = 5;

-- GROUP THE FIRST_NAME BY THE CHARACTER COUNT IN EMPLOYEES TABLE
-- NAME_LENGTH, NAME_COUNT
SELECT LENGTH(FIRST_NAME) AS NAME_LENGTH , COUNT(*) AS NAME_COUNT
FROM EMPLOYEES
GROUP BY LENGTH(FIRST_NAME)
ORDER BY 1;

-- (THIS IS NOT GROUP BY TASK) 
-- SORT THE FIRST NAME BY CHARACTER COUNT OF TIRST NAME IN EMPLOYEE TABLE
SELECT FIRST_NAME
FROM EMPLOYEES
ORDER BY LENGTH(FIRST_NAME);

-- ORDERING BY 2 COLUMNS
-- SORT EMPLOYEE TABLE BY FIRST NAME , 
-- IF FIRST NAMES ARE THE SAME, THEN ORDER BY LAST NAME
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
ORDER BY FIRST_NAME ASC , LAST_NAME ASC;

--------------------------------------------------------------------------------

-- Relational Database
-- consists of tables that related to each other

-- Each and every table has a unique identifier column
-- known as Primiry Key
-- This column can not have duplicate value and can not be null






































