-- THIS IS HOW YOU COMMENT --> (--)
-- SQL is case insensitive

-- *(star) is wildcard, means all the columns
SELECT * FROM EMPLOYEES ;

-- You can only use the table that exist
-- or it will give you error
SELECT * FROM COUNTRIES ;

-- TASK NUMBER 1:
-- Using above example , see all data from all other tables
SELECT * FROM DEPARTMENTS ;
SELECT * FROM JOB_HISTORY ;
SELECT * FROM JOBS ;
SELECT * FROM locations ;
SELECT * FROM regions ;

-- Selecting specific column rather then all of them from a table
-- You can use column name separated by comma(,) to get only columns you care about
SELECT FIRST_NAME , SALARY 
FROM employees;

--Task 2:
-- Show the result of all LAST_NAME, HIRE_DATE, DEPARTMENT_ID
SELECT LAST_NAME, HIRE_DATE, DEPARTMENT_ID 
FROM employees;
-- WHITE SPACE DOES MAKE IT AS MUCH READABLE AS POSSIBLE WITH YOUR IMAGINATION

-- Task 3: 
-- Select these columns from locations table
/*
STREET_ADDRESS
CITY
STATE_PROVINCE
*/
SELECT STREET_ADDRESS, CITY, STATE_PROVINCE
FROM LOCATIONS;

-- RESTRICTING THE ROW WITH CONDITION
-- WHERE CLAUSE CAN BE USED AFTER THE FROM TABLENAME
-- TO RESTRICT THE RSEULT ACCORDING TO CERTAIN CONDITION

-- GET ALL THE EMPLOYEE INFORMATION IF THEIR SALARY IS MORE THEN 10000
SELECT * FROM EMPLOYEES 
WHERE SALARY > 10000;

-- WHAT OTHERS RELATIONAL OPERATORS ARE AVAILABLE?
--      = EQUAL   |  not EQUAL <>
SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES
WHERE SALARY = 24000;

-- FIND THE OPOSITE OF ABOVE RESULT
SELECT FIRST_NAME , SALARY
FROM EMPLOYEES
-- WHERE SALARY <> 24000; -> THIS IS THE SAME AS UNDER (!=) OR(<>)
WHERE SALARY != 24000;

-- WHAT ABOUT STRING
-- FIND OUT FIRS TNAME AND LAST NAME OF EMPLOYEES
-- WITH FIRST_NAME ALEXANDER
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME = 'Alexander';
--  COMAND IS NOT CASE SENSITIVE but THE DATA IS CASE SENSITIVE

--TASK 4:
/*
SELECT ALL LOCATION INFO FROM DEPARTMENT TABLE 
    NOT INCLUDING THE LOCATION ID OF 1700
*/
SELECT * 
FROM DEPARTMENTS
WHERE location_id <> 1700 ;

--          > , >= , < , <= ARE ALSO AVAILABLE

-- LOGICAL OPERATORS AND OR
-- FIND OUT ALL EMPLOYEES WITH SALARY BETWEEN 8000 and 12000
SELECT * 
FROM EMPLOYEES
WHERE salary >= 8000 AND SALARY <= 12000;

-- FIND OUT EMPLOYEE_ID, FIRST_NAME, SALARY WITH SALARY OVER OVER 12000 AND LESS THAN 6000
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY 
FROM EMPLOYEES
WHERE salary >= 12000 OR salary <= 6000;

-- DIFFERENT APROACH
-- FIND OUT ALL EMPLOYEES WITH SALARY BETWEEN 8000 and 12000
SELECT * FROM EMPLOYEES
WHERE salary BETWEEN 8000 AND 12000;





